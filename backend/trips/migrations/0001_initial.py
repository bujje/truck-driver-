# Generated by Django 4.2.10 on 2025-09-13 15:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('current_location', models.CharField(max_length=255)),
                ('current_location_lat', models.FloatField()),
                ('current_location_lng', models.FloatField()),
                ('pickup_location', models.CharField(max_length=255)),
                ('pickup_location_lat', models.FloatField()),
                ('pickup_location_lng', models.FloatField()),
                ('dropoff_location', models.CharField(max_length=255)),
                ('dropoff_location_lat', models.FloatField()),
                ('dropoff_location_lng', models.FloatField()),
                ('current_cycle_hours', models.FloatField(help_text='Hours already worked in current 8-day cycle')),
                ('total_distance', models.FloatField(blank=True, null=True)),
                ('estimated_driving_time', models.FloatField(blank=True, null=True)),
                ('total_trip_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_type', models.CharField(choices=[('rest', '10-Hour Rest Stop'), ('break', '30-Minute Break'), ('fuel', 'Fuel Stop'), ('pickup', 'Pickup Location'), ('dropoff', 'Dropoff Location')], max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('arrival_time', models.DateTimeField()),
                ('departure_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.FloatField(help_text='Duration in hours')),
                ('distance_from_start', models.FloatField(help_text='Distance from trip start in miles')),
                ('sequence', models.IntegerField(help_text='Order of stop in the trip')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='trips.trip')),
            ],
            options={
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='RouteSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(help_text='Distance in miles')),
                ('estimated_time', models.FloatField(help_text='Estimated driving time in hours')),
                ('polyline', models.TextField(help_text='Encoded polyline for the route segment')),
                ('sequence', models.IntegerField(help_text='Order of segment in the trip')),
                ('end_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_segments', to='trips.stop')),
                ('start_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_segments', to='trips.stop')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_segments', to='trips.trip')),
            ],
            options={
                'ordering': ['sequence'],
            },
        ),
    ]
